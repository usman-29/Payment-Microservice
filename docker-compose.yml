services:
  postgres:
    image: postgres:15
    container_name: payment-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    command: >
      postgres -c wal_level=logical
        -c max_replication_slots=10
        -c max_wal_senders=10
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  postgres-replica-1:
    image: postgres:15
    container_name: postgres-replica-1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"  # expose on different host port
    depends_on:
      - postgres
    command: >
      bash -c "rm -rf /var/lib/postgresql/data/* && 
        pg_basebackup -h postgres -D /var/lib/postgresql/data -U ${POSTGRES_USER} -Fp -Xs -P -R &&
        postgres"
    volumes:
      - replica1_data:/var/lib/postgresql/data

  postgres-replica-2:
    image: postgres:15
    container_name: postgres-replica-2
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5434:5432"
    depends_on:
      - postgres
    command: >
      bash -c "rm -rf /var/lib/postgresql/data/* && 
        pg_basebackup -h postgres -D /var/lib/postgresql/data -U ${POSTGRES_USER} -Fp -Xs -P -R &&
        postgres"
    volumes:
      - replica2_data:/var/lib/postgresql/data

  nginx-db-proxy:
    image: nginx:latest
    container_name: nginx-db-proxy
    depends_on:
      - postgres
      - postgres-replica-1
      - postgres-replica-2
    ports:
      - "5433:5432"  # app connects to this for read queries
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro


    
  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  
  # Debezium (CDC connector for PostgreSQL)
  debezium:
    image: debezium/connect:2.4.1.Final
    container_name: debezium
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8083"
    networks:
      - default
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_connect_configs
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_statuses
      CONFIG_STORAGE_REPLICATION_FACTOR: 1          
      OFFSET_STORAGE_REPLICATION_FACTOR: 1       
      STATUS_STORAGE_REPLICATION_FACTOR: 1 
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  
  # Kafka UI (Topic/message browser)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

volumes:
  postgres_data:
